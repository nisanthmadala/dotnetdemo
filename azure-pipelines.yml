trigger:
  branches:
    include:
    - main
    - develop
    - features/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: Build
    displayName: 'Build and Publish'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet build $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        arguments: '--configuration $(buildConfiguration)'
        publishWebProjects: true
      displayName: 'dotnet publish $(buildConfiguration)'

- stage: DeployToTesting
  displayName: 'Deploy to Testing Environment'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'kubectl'
        command: 'apply'
        arguments: '-f $(Build.SourcesDirectory)/kubernetes/testing/deployment.yaml'
        secretType: 'dockerRegistry'
        secretArguments: '-i $(myindia) -u $(0a8915f5-9ff2-401c-8999-1244db3afae5) -p $(0a8915f5-9ff2-401c-8999-1244db3afae5)'

- stage: DeployToProduction
  displayName: 'Deploy to Production Environment'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'kubectl'
        command: 'apply'
        arguments: '-f $(Build.SourcesDirectory)/kubernetes/production/deployment.yaml'
        secretType: 'dockerRegistry'
        secretArguments: '-i $(myindia) -u $(0a8915f5-9ff2-401c-8999-1244db3afae5) -p $(0a8915f5-9ff2-401c-8999-1244db3afae5)'
